version: '3.2'
services:
    php:
        build: 
            context: ./php
            args:
                - CHANGE_SOURCE=${CHANGE_SOURCE}
        image: php
        container_name: php
        expose:
            - "9000"
        ports:
            - "7272:7272" #workman聊天室
            - "55151:55151" #workman聊天室    
        volumes:
            - ../../www:/data/www:rw
            - ./php/php.ini:/usr/local/etc/php/php.ini:ro # 当前php配置文件；可以拷贝修改php-dev.ini为想要的配置
            - ./php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
            - ../logs/php:/var/log/php-fpm:rw
        restart: always
        command: php-fpm
        extra_hosts:
          - "api.sas.test:192.168.56.101"
          - "api.mam.test:192.168.56.101"

    nginx:
        build: ./nginx
        image: nginx
        container_name: nginx
        links:
            - php:php
        volumes:
            - ../../www:/data/www:rw
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
            - ./nginx/certs/:/etc/nginx/certs
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ../logs/nginx:/var/log/nginx
        ports:
            - "80:80" #宿主端口：容器端口
        restart: always
        command: nginx -g 'daemon off;'

    mysql:
        build: 
            context:
                ./mysql
            args:
                - "--ignore-db-dir=lost+found"
        image: mysql
        container_name: mysql
        ports:
            - "3306:3306"
        volumes:
            - ../data/mysql:/var/lib/mysql:rw
            - ../logs/mysql:/var/lib/mysql-logs:rw
            - ./mysql/my.cnf:/etc/my.cnf:ro
            - ../logs/mysql-files:/var/lib/mysql-files/
        environment:
            MYSQL_ROOT_PASSWORD: root
        restart: always
        command:
            --default-authentication-plugin=mysql_native_password
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_general_ci
            --explicit_defaults_for_timestamp=true
            --lower_case_table_names=1
            --innodb_use_native_aio=0
        security_opt:
            - seccomp:unconfined

    redis:
        build: ./redis
        image: redis
        container_name: redis
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - ../data/redis:/data
        restart: always

    # python:
    #     build: ./python
    #     image: python
    #     container_name: python
    #     volumes:
    #         - ../../pythonCode:/usr/src/app:rw
    #         - ../logs/scrapyd:/usr/src/app/scrapyd/logs:rw
    #     ports:
    #         # - '81:81'
    #         - '6800:6800' #scrapyd
    #         - '8000:8000' #gerapy
    #         - '3000:3000' #gerapy
    #     restart: always
    #     stdin_open: true
    #     tty: true
    #     links:
    #         - mysql
    #         - redis

    beanstalk:
        build: 
            context: ./beanstalk
            args:
                - CHANGE_SOURCE=${CHANGE_SOURCE}
        image: beanstalk
        container_name: beanstalk
        ports:
            - "11300:11300"
        restart: always
        privileged: true

    # golang:
    #     build: ./golang
    #     image: golang
    #     container_name: golang
    #     ports:
    #       - "8088:8088"
    #     restart: always
    #     links:
    #       - mysql
    #       - redis
    #     volumes:
    #       - ../../goCode:/go
    #     tty: true

    # elasticsearch:
    #     build: ./elasticsearch
    #     image: elasticsearch
    #     container_name: elasticsearch
    #     volumes:
    #         - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    #         - ../data/elasticsearch:/usr/share/elasticsearch/data:rw
    #     environment:
    #         - cluster.name=docker-cluster
    #         - bootstrap.memory_lock=true
    #         - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    #     ulimits:
    #         memlock:
    #             soft: -1
    #             hard: -1
    #     ports:
    #         - "9200:9200"

    # elasticsearch-head:
    #     image: mobz/elasticsearch-head:5
    #     container_name: elasticsearch-head
    #     ports:
    #         - "9100:9100"
    #     depends_on:
    #       - elasticsearch

    # logstash:
    #     build: ./logstash
    #     image: logstash
    #     container_name: logstash
    #     volumes:
    #         - ./logstash/templates:/usr/share/logstash/templates:ro
    #         - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
    #         - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    #     ports:
    #         - "5000:5000"
    #         - "9600:9600"
    #     environment:
    #         LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    #     depends_on:
    #         - elasticsearch

    # splash:
    #     image: scrapinghub/splash
    #     container_name: splash
    #     ports:
    #         - "8050:8050"
    #         - "5023:5023"
    #     restart: always

    # proxy_pool:
    #     image: jhao104/proxy_pool
    #     container_name: proxy_pool
    #     ports:
    #         - "5010:5010"
    #     links:
    #         - redis
    #     environment:
    #         DB_CONN: "redis://:111111@redis:6379/0"

    # rabbitmq:
    #     build: ./rabbitmq
    #     image: rabbitmq
    #     container_name: rabbitmq
    #     ports:
    #         - "5672:5672"
    #         - "15672:15672"
    #     privileged: true
    #     environment:
    #         - RABBITMQ_DEFAULT_USER=test
    #         - RABBITMQ_DEFAULT_PASS=test
    #     volumes:
    #         - ../data/rabbitmq:/var/lib/rabbitmq

    # memcached:
    #     build: ./memcached
    #     image: memcached
    #     container_name: memcached
    #     volumes:
    #         - ../data/memcached:/var/lib/memcached
    #     ports:
    #         - "11211:11211"

    # mongodb:
    #     build: ./mongodb
    #     image: mongodb
    #     container_name: mongodb
    #     ports:
    #         - "27017:27017"
    #     # # 要求磁盘必须非NTFS格式才可以
    #     # volumes:
    #     #     - ../data/mongo/configdb:/data/configdb
    #     #     - ../data/mongo/db:/data/db
    #     # command: mongod --auth
    #     restart: always
    #     stdin_open: true
    #     tty: true

    # anyproxy:
    #     build: ./anyproxy
    #     image: anyproxy
    #     container_name: anyproxy
    #     volumes:
    #         - ../logs/anyproxy:/anyproxy:rw
    #     ports:
    #         - "8001:8001"
    #         - "8002:8002"

    # rmqnamesrv:
    #     image: foxiswho/rocketmq:server
    #     container_name: rmqnamesrv
    #     restart: always
    #     ports:
    #         - 9876:9876
    #     volumes:
    #         - ../logs/rocketmq/rmqnamesrv:/opt/logs
    #         - ../data/rocketmq/rmqnamesrv:/opt/store
          
    # rmqbroker:
    #     image: foxiswho/rocketmq:broker
    #     container_name: rmqbroker
    #     restart: always
    #     depends_on:
    #         - rmqnamesrv
    #     ports:
    #         - 10909:10909
    #         - 10911:10911
    #     volumes:
    #         - ../logs/rocketmq/broker:/opt/logs
    #         - ../data/rocketmq/broker:/opt/store
    #         - ./rocketmq/broker.conf:/etc/rocketmq/broker.conf
    #     environment:
    #         NAMESRV_ADDR: "rmqnamesrv:9876"
    #         JAVA_OPTS: " -Duser.home=/opt"
    #         JAVA_OPT_EXT: "-server -Xms128m -Xmx128m -Xmn128m"
    #     command: mqbroker -c /etc/rocketmq/broker.conf
          
    # rmqconsole:
    #     image: styletang/rocketmq-console-ng
    #     container_name: rmqconsole
    #     restart: always
    #     ports:
    #         - 9877:8080
    #     depends_on:
    #         - rmqnamesrv
    #     environment:
    #         JAVA_OPTS: "-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"

    # nacos:
    #     image: nacos/nacos-server:latest
    #     container_name: nacos
    #     privileged: true
    #     env_file:
    #         - ./nacos/.env
    #     volumes:
    #         - ../logs/nacos:/home/nacos/logs
    #         - ./nacos/custom.properties:/home/nacos/init.d/custom.properties
    #     ports:
    #         - "7848:7848"
    #         - "8848:8848"
    #         - "9848:9848"
    #         - "9555:9555"
    #         - "9849:9849"
    #     external_links:
    #         - mysql
    #     restart: on-failure

    # xxl-job-admin:
    #     image: xuxueli/xxl-job-admin:2.3.0
    #     restart: always
    #     container_name: xxl-job-admin
    #     environment:
    #         PARAMS: '--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?Unicode=true&characterEncoding=UTF-8 --spring.datasource.username=root --spring.datasource.password=root --xxl.job.accessToken=zookao'
    #     ports:
    #         - 8989:8080
    #     volumes:
    #         - ../data/xxljob:/data/applogs
